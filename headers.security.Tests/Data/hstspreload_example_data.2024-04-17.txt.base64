// Copyright 2012 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file contains the HSTS preloaded list in a machine readable format.

// The top-level element is a dictionary with one key: "entries", which contains
// the HSTS details for each host.
//
// "entries" is a list of objects. Each object has the following members:
//   name: (string) the DNS name of the host in question.
//   policy: (string) the policy under which the domain is part of the
//       preload list. This field is used for list maintenance.
//         - test: test domains.
//         - google: Google-owned sites.
//         - custom: entries without includeSubdomains or with HPKP.
//         - bulk-legacy: bulk entries preloaded before Chrome 50.
//         - bulk-18-weeks: bulk entries with max-age >= 18 weeks (Chrome 50-63).
//         - bulk-1-year: bulk entries with max-age >= 1 year (after Chrome 63).
//         - public-suffix: public suffixes (e.g. TLDs or other public suffix
//           list entries) preloaded at the owner's request.
//         - public-suffix-requested: domains under a public suffix that have
//           been preloaded at the request of the the public suffix owner (e.g.
//           the registry for the TLD).
//   include_subdomains: (optional boolean) For backwards compatibility, this
//       means:
//       - If mode == "force-https", then apply force-https to subdomains.
//   mode: (optional string) "force-https" iff covered names should require
//       HTTPS.
//
{
  "entries": [
    // Dummy entries to test certificate pinning.
    { "name": "example.test", "policy": "test", "include_subdomains": true, "mode": "force-https" },
    { "name": "trailing-comma.test", "policy": "test", "include_subdomains": true, "mode": "force-https", },
    { "name": "missing-incsub.test", "policy": "test", "mode": "force-https" },
    { "name": "missing-mode.test", "policy": "test", "include_subdomains": true },
    { "name": "missing-policy.test", "include_subdomains": true, "mode": "force-https" },
    { "policy": "missing-name.test", "include_subdomains": true, "mode": "force-https" },
    {},
    // END OF ETLD-OWNER REQUESTED ENTRIES

    // To avoid trailing comma changes from showing up in diffs, we place a
    // single entry at the end.
    { "name": "other-example.test", "policy": "test", "include_subdomains": true, "mode": "force-https" }
  ]
}